name: Build and test

on: [push, pull_request]

jobs:
  build_and_test:
    name: Build and test (${{ matrix.os }}, ${{ matrix.config_name }})
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        config_name: [x64-debug, x64-release, clang-x64-release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install required packages
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install gcc-14 g++-14 clang-19
        clang++-19 --version
        g++-14 --version

    - name: Get CMake
      uses: lukka/get-cmake@56d043d188c3612951d8755da8f4b709ec951ad6

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        if [[ ${{ matrix.os }} = "windows-latest" ]]; then
          echo "os-name=windows" >> "$GITHUB_OUTPUT"
        fi
        if [[ ${{ matrix.os }} = "ubuntu-latest" ]]; then
          echo "os-name=linux" >> "$GITHUB_OUTPUT"
        fi

    - name: Enable Developer Command Prompt
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        --preset ${{ steps.strings.outputs.os-name }}-${{ matrix.config_name }}

    - name: Build
      run: >
        cmake --build ${{ steps.strings.outputs.build-output-dir }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: tests/tests

    - name: Prepare artifact directory
      if: matrix.config_name == 'clang-x64-release' && github.ref == 'refs/heads/main'
      working-directory: .
      run: |
        mkdir artifacts
        cp ${{ steps.strings.outputs.build-output-dir }}/chess-engine/Euwe* artifacts
        cp LICENSE artifacts
        cp NOTICE artifacts

    - name: Archive binary
      if: matrix.config_name == 'clang-x64-release' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: Euwe-dev.${{ steps.strings.outputs.os-name }}
        path: |
          artifacts/LICENSE
          artifacts/NOTICE
          artifacts/Euwe*

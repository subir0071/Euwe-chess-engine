name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  pre_job:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:

      - id: skip_check
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf
        with:
          cancel_others: true
          concurrent_skipping: same_content_newer

  build_and_test:
    needs: pre_job
    # Always run on main to ensure that the cache is populated and accessible to all other refs.
    if: ${{ needs.pre_job.outputs.should_skip != 'true' || github.ref_name == 'main' }}
    name: ${{ matrix.config.preset }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false

      matrix:
        config:
          # Windows MSVC
          - {
             os: windows-latest,
             preset: windows-msvc-debug
           }

          # Windows clang-cl
          - {
             os: windows-latest,
             preset: windows-clang-cl-release
           }

          # Linux clang
          - {
              os: ubuntu-latest,
              preset: linux-clang-debug
            }
          - {
              os: ubuntu-latest,
              preset: linux-clang-release
            }

          # Linux sanitizers
          - {
              os: ubuntu-latest,
              preset: linux-asan-ubsan
            }
          - {
              os: ubuntu-latest,
              preset: linux-tsan
            }
          - {
              os: ubuntu-latest,
              preset: linux-msan
            }

    steps:

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install required packages
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install clang-19
          clang++-19 --version

      - name: Get CMake
        uses: lukka/get-cmake@56d043d188c3612951d8755da8f4b709ec951ad6

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/out/build/${{ matrix.config.preset }}/src" >> "$GITHUB_OUTPUT"
          if [[ ${{ matrix.config.os }} = "windows-latest" ]]; then
            echo "syzygy-paths=\"./3-4-5-wdl;./3-4-5-dtz\"" >> "$GITHUB_OUTPUT"
          fi
          if [[ ${{ matrix.config.os }} = "ubuntu-latest" ]]; then
            echo "syzygy-paths=./3-4-5-wdl:./3-4-5-dtz" >> "$GITHUB_OUTPUT"
          fi

      - name: Restore cached MSan libc++
        if: matrix.config.preset == 'linux-msan'
        id: cache-msan-libcxx
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
           path: |
              toolchains/llvm-project/build/msan/include/
              toolchains/llvm-project/build/msan/lib/
           key: key-msan-libcxx-clang_19-llvm_git_sha_923a5c4f83d2b3675bb88e9fe441daeaa4d69488

      - name: Build MSan libc++
        if: matrix.config.preset == 'linux-msan' && steps.cache-msan-libcxx.outputs.cache-hit != 'true'
        working-directory: toolchains
        run: |
          bash build-msan-libcxx.sh

      - name: CMake configure & build
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4
        with:
          configurePreset: ${{ matrix.config.preset }}
          configurePresetAdditionalArgs: "['-DTARGETS_TO_BUILD=engine']"
          buildPreset: ${{ matrix.config.preset }}
          buildPresetAdditionalArgs: "['--target', 'Euwe']"

      - name: Get fastchess (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        shell: bash
        run: |
          wget --no-verbose https://github.com/Disservin/fastchess/releases/download/v1.4.0-alpha/fastchess-ubuntu-22.04.zip
          unzip fastchess-ubuntu-22.04.zip fastchess-ubuntu-22.04
          mv fastchess-ubuntu-22.04 fastchess

      - name: Get fastchess (Windows)
        if: matrix.config.os == 'windows-latest'
        shell: powershell
        run: |
          wget https://github.com/Disservin/fastchess/releases/download/v1.4.0-alpha/fastchess-windows-latest.zip -OutFile fastchess-windows-latest.zip
          Expand-Archive .\fastchess-windows-latest.zip fastchess-windows
          mv fastchess-windows/fastchess-windows-latest.exe fastchess.exe

      - name: Get opening book (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        shell: bash
        run: |
          wget --no-verbose https://github.com/official-stockfish/books/raw/master/UHO_4060_v2.epd.zip
          unzip UHO_4060_v2.epd.zip

      - name: Get opening book (Windows)
        if: matrix.config.os == 'windows-latest'
        shell: powershell
        run: |
           wget https://github.com/official-stockfish/books/raw/master/UHO_4060_v2.epd.zip -OutFile UHO_4060_v2.epd.zip
           Expand-Archive UHO_4060_v2.epd.zip book
           mv book/UHO_4060_v2.epd UHO_4060_v2.epd

      - name: Cache Syzygy
        id: cache-syzygy
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
           path: |
              3-4-5-wdl/
              3-4-5-dtz/
           key: key-syzygy
           
      - name: Download Syzygy 3-4-5 if needed (Linux)
        if: steps.cache-syzygy.outputs.cache-hit != 'true' && matrix.config.os == 'ubuntu-latest'
        shell: bash
        run: |
          wget --no-verbose -r -nH --cut-dirs=2 --no-parent --reject="index.html*" -e robots=off https://tablebase.lichess.ovh/tables/standard/3-4-5-wdl/
          wget --no-verbose -r -nH --cut-dirs=2 --no-parent --reject="index.html*" -e robots=off https://tablebase.lichess.ovh/tables/standard/3-4-5-dtz/

      - name: Download Syzygy 3-4-5 if needed (Windows)
        if: steps.cache-syzygy.outputs.cache-hit != 'true' && matrix.config.os == 'windows-latest'
        shell: powershell
        run: |
          wget https://eternallybored.org/misc/wget/1.21.4/64/wget.exe -OutFile wget.exe
          ./wget.exe --no-verbose -r -nH --cut-dirs=2 --no-parent --reject="index.html*" -e robots=off https://tablebase.lichess.ovh/tables/standard/3-4-5-wdl/
          ./wget.exe --no-verbose -r -nH --cut-dirs=2 --no-parent --reject="index.html*" -e robots=off https://tablebase.lichess.ovh/tables/standard/3-4-5-dtz/

      - name: Run tournament
        run: >
          ./fastchess
          -engine cmd=${{ steps.strings.outputs.build-output-dir }}/chess-engine/Euwe name=Euwe1
          -engine cmd=${{ steps.strings.outputs.build-output-dir }}/chess-engine/Euwe name=Euwe2
          -each tc="inf/1+0.01" option.Hash=64 option.SyzygyPath=${{ steps.strings.outputs.syzygy-paths }}
          -openings file=UHO_4060_v2.epd format=epd order=sequential
          -rounds 50
          -concurrency 4
          -log file=tournament.log engine=true

      - name: Print tournament log on failure
        if: ${{ failure() }}
        shell: bash
        run: |
          cat tournament.log

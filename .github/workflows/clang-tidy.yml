name: clang-tidy Check

on: [push, pull_request]

jobs:
  pre_job:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:

      - id: skip_check
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf
        with:
          cancel_others: true
          concurrent_skipping: same_content_newer

  lint_check:
    name: Run

    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false

      matrix:
        config:
          - {
              os: ubuntu-latest,
              preset: linux-clang-debug,
              vcpkg_cache_triplet: x64-linux
            }

    env:
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/vcpkg-binary-cache,read

    steps:

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install clang-tidy-19
          clang-tidy-19 --version

      - name: Get CMake
        uses: lukka/get-cmake@56d043d188c3612951d8755da8f4b709ec951ad6

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "vcpkg-cache-key=vcpkg-${{ matrix.config.vcpkg_cache_triplet }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}" >> "$GITHUB_OUTPUT"

      - name: Restore cached VCPKG binaries
        id: cache-vcpkg-binaries
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684
        with:
           path: |
              ${{ github.workspace }}/vcpkg-binary-cache
           key: ${{ steps.strings.outputs.vcpkg-cache-key }}

      - name: CMake configure
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4
        with:
          configurePreset: ${{ matrix.config.preset }}
          configurePresetAdditionalArgs: "['-DCMAKE_EXPORT_COMPILE_COMMANDS=ON']"

      - name: Run clang-tidy script
        run: |
          bash ci/clang-tidy-parallel.sh

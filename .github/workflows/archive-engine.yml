name: Archive Engine Binaries

on:
  push:
    branches: [main]
    tags: ['v*']

jobs:
  archive_engine:
    name: ${{ matrix.config.preset }}
    runs-on: ${{ matrix.config.os }}
    permissions:
      contents: write

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        config:
          - {
              os: windows-latest,
              preset: windows-clang-cl-release,
              os-name: windows
            }
          - {
              os: ubuntu-latest,
              preset: linux-clang-release,
              os-name: linux
            }

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        
      - name: Install clang
        if: matrix.config.os == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@5902b33ae29014e6ca012c5d8025d4346556bd40
        with:
          packages: clang-19
          version: 1

      - name: Get CMake
        uses: lukka/get-cmake@56d043d188c3612951d8755da8f4b709ec951ad6

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/out/build/${{ matrix.config.preset }}/src" >> "$GITHUB_OUTPUT"

      - name: CMake configure & build
        uses: lukka/run-cmake@af1be47fd7c933593f687731bc6fdbee024d3ff4
        with:
          configurePreset: ${{ matrix.config.preset }}
          configurePresetAdditionalArgs: "['-DTARGETS_TO_BUILD=engine']"
          buildPreset: ${{ matrix.config.preset }}
          buildPresetAdditionalArgs: "['--target', 'Euwe']"

      - name: Prepare artifact directory
        working-directory: .
        run: |
          mkdir artifacts
          cp ${{ steps.strings.outputs.build-output-dir }}/chess-engine/Euwe* artifacts
          cp LICENSE artifacts
          cp NOTICE artifacts

      - name: Upload binary to CI artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: Euwe-dev.${{ matrix.config.os-name }}
          path: |
            artifacts/LICENSE
            artifacts/NOTICE
            artifacts/Euwe*

      - name: Check for release tag
        id: check-tag
        shell: bash
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi

      - name: Zip up artifacts (Linux)
        if: steps.check-tag.outputs.match == 'true' && matrix.config.os == 'ubuntu-latest'
        run: |
          zip Euwe-${{ github.ref_name }}.${{ matrix.config.os-name }}.zip artifacts/* -j

      - name: Zip up artifacts (Windows)
        if: steps.check-tag.outputs.match == 'true' && matrix.config.os == 'windows-latest'
        run: |
          Compress-Archive artifacts/* Euwe-${{ github.ref_name }}.${{ matrix.config.os-name }}.zip

      - name: Upload artifacts to release
        if: steps.check-tag.outputs.match == 'true'
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        with:
          files: Euwe-${{ github.ref_name }}.${{ matrix.config.os-name }}.zip
